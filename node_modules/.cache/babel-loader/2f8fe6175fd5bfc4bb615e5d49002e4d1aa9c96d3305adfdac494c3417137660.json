{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ordinateur\\\\react-chatbot-master\\\\react-chatbot-master\\\\asm12\\\\src\\\\chatbot\\\\messageParsers.js\";\n// in MessageParser.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageParser = ({\n  children,\n  actions\n}) => {\n  const parse = message => {\n    const lower = message.toLowerCase();\n    if (message.includes('hello')) {\n      actions.handleHello();\n    }\n    if (message.includes('dog')) {\n      actions.handleDog();\n    }\n    if (lower.includes('gowtham')) {\n      actions.handleName();\n    }\n    if (message.toLowerCase().includes(\"27\")) {\n      actions.handleNumber();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        parse: parse,\n        actions\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageParser;\nexport default MessageParser;\nvar _c;\n$RefreshReg$(_c, \"MessageParser\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageParser","children","actions","parse","message","lower","toLowerCase","includes","handleHello","handleDog","handleName","handleNumber","Children","map","child","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ordinateur/react-chatbot-master/react-chatbot-master/asm12/src/chatbot/messageParsers.js"],"sourcesContent":["// in MessageParser.js\nimport React from 'react';\n\n\nconst MessageParser = ({ children, actions }) => {\n  \n  const parse = (message) => {\n\n    const lower = message.toLowerCase()\n\n    if (message.includes('hello')) {\n      actions.handleHello();\n    }\n    if (message.includes('dog')) {\n      actions.handleDog();\n    }\n    if (lower.includes('gowtham') ) {\n      actions.handleName();\n    }\n    if (message.toLowerCase().includes(\"27\")) {\n      actions.handleNumber();\n    }\n  };\n\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          parse: parse,\n          actions,\n        });\n      })}\n    </div>\n  );\n};\n\nexport default MessageParser;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAE/C,MAAMC,KAAK,GAAIC,OAAO,IAAK;IAEzB,MAAMC,KAAK,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;IAEnC,IAAIF,OAAO,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC7BL,OAAO,CAACM,WAAW,CAAC,CAAC;IACvB;IACA,IAAIJ,OAAO,CAACG,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC3BL,OAAO,CAACO,SAAS,CAAC,CAAC;IACrB;IACA,IAAIJ,KAAK,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAG;MAC9BL,OAAO,CAACQ,UAAU,CAAC,CAAC;IACtB;IACA,IAAIN,OAAO,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;MACxCL,OAAO,CAACS,YAAY,CAAC,CAAC;IACxB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAE,QAAA,EACGJ,KAAK,CAACe,QAAQ,CAACC,GAAG,CAACZ,QAAQ,EAAGa,KAAK,IAAK;MACvC,oBAAOjB,KAAK,CAACkB,YAAY,CAACD,KAAK,EAAE;QAC/BX,KAAK,EAAEA,KAAK;QACZD;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA9BIpB,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}